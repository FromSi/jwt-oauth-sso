// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fromsi/jwt-oauth-sso/internal/services (interfaces: QueryResetTokenService)
//
// Generated by this command:
//
//	mockgen -destination=../mocks/services/mock_query_reset_token_service.go -package=services_mocks github.com/fromsi/jwt-oauth-sso/internal/services QueryResetTokenService
//

// Package services_mocks is a generated GoMock package.
package services_mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockQueryResetTokenService is a mock of QueryResetTokenService interface.
type MockQueryResetTokenService struct {
	ctrl     *gomock.Controller
	recorder *MockQueryResetTokenServiceMockRecorder
	isgomock struct{}
}

// MockQueryResetTokenServiceMockRecorder is the mock recorder for MockQueryResetTokenService.
type MockQueryResetTokenServiceMockRecorder struct {
	mock *MockQueryResetTokenService
}

// NewMockQueryResetTokenService creates a new mock instance.
func NewMockQueryResetTokenService(ctrl *gomock.Controller) *MockQueryResetTokenService {
	mock := &MockQueryResetTokenService{ctrl: ctrl}
	mock.recorder = &MockQueryResetTokenServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockQueryResetTokenService) EXPECT() *MockQueryResetTokenServiceMockRecorder {
	return m.recorder
}

// GenerateToken mocks base method.
func (m *MockQueryResetTokenService) GenerateToken() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateToken")
	ret0, _ := ret[0].(string)
	return ret0
}

// GenerateToken indicates an expected call of GenerateToken.
func (mr *MockQueryResetTokenServiceMockRecorder) GenerateToken() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateToken", reflect.TypeOf((*MockQueryResetTokenService)(nil).GenerateToken))
}
