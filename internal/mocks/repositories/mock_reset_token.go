// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fromsi/jwt-oauth-sso/internal/repositories (interfaces: ResetToken)
//
// Generated by this command:
//
//	mockgen -destination=../mocks/repositories/mock_reset_token.go -package=repositories_mocks github.com/fromsi/jwt-oauth-sso/internal/repositories ResetToken
//

// Package repositories_mocks is a generated GoMock package.
package repositories_mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockResetToken is a mock of ResetToken interface.
type MockResetToken struct {
	ctrl     *gomock.Controller
	recorder *MockResetTokenMockRecorder
	isgomock struct{}
}

// MockResetTokenMockRecorder is the mock recorder for MockResetToken.
type MockResetTokenMockRecorder struct {
	mock *MockResetToken
}

// NewMockResetToken creates a new mock instance.
func NewMockResetToken(ctrl *gomock.Controller) *MockResetToken {
	mock := &MockResetToken{ctrl: ctrl}
	mock.recorder = &MockResetTokenMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResetToken) EXPECT() *MockResetTokenMockRecorder {
	return m.recorder
}

// GetCreatedAt mocks base method.
func (m *MockResetToken) GetCreatedAt() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCreatedAt")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetCreatedAt indicates an expected call of GetCreatedAt.
func (mr *MockResetTokenMockRecorder) GetCreatedAt() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCreatedAt", reflect.TypeOf((*MockResetToken)(nil).GetCreatedAt))
}

// GetExpiresAt mocks base method.
func (m *MockResetToken) GetExpiresAt() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExpiresAt")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetExpiresAt indicates an expected call of GetExpiresAt.
func (mr *MockResetTokenMockRecorder) GetExpiresAt() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExpiresAt", reflect.TypeOf((*MockResetToken)(nil).GetExpiresAt))
}

// GetToken mocks base method.
func (m *MockResetToken) GetToken() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetToken")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetToken indicates an expected call of GetToken.
func (mr *MockResetTokenMockRecorder) GetToken() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetToken", reflect.TypeOf((*MockResetToken)(nil).GetToken))
}

// GetUserUUID mocks base method.
func (m *MockResetToken) GetUserUUID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserUUID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetUserUUID indicates an expected call of GetUserUUID.
func (mr *MockResetTokenMockRecorder) GetUserUUID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserUUID", reflect.TypeOf((*MockResetToken)(nil).GetUserUUID))
}

// SetCreatedAt mocks base method.
func (m *MockResetToken) SetCreatedAt(arg0 int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetCreatedAt", arg0)
}

// SetCreatedAt indicates an expected call of SetCreatedAt.
func (mr *MockResetTokenMockRecorder) SetCreatedAt(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetCreatedAt", reflect.TypeOf((*MockResetToken)(nil).SetCreatedAt), arg0)
}

// SetExpiresAt mocks base method.
func (m *MockResetToken) SetExpiresAt(arg0 int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetExpiresAt", arg0)
}

// SetExpiresAt indicates an expected call of SetExpiresAt.
func (mr *MockResetTokenMockRecorder) SetExpiresAt(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetExpiresAt", reflect.TypeOf((*MockResetToken)(nil).SetExpiresAt), arg0)
}

// SetToken mocks base method.
func (m *MockResetToken) SetToken(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetToken", arg0)
}

// SetToken indicates an expected call of SetToken.
func (mr *MockResetTokenMockRecorder) SetToken(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetToken", reflect.TypeOf((*MockResetToken)(nil).SetToken), arg0)
}

// SetUserUUID mocks base method.
func (m *MockResetToken) SetUserUUID(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetUserUUID", arg0)
}

// SetUserUUID indicates an expected call of SetUserUUID.
func (mr *MockResetTokenMockRecorder) SetUserUUID(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetUserUUID", reflect.TypeOf((*MockResetToken)(nil).SetUserUUID), arg0)
}
