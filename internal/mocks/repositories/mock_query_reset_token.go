// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fromsi/jwt-oauth-sso/internal/repositories (interfaces: QueryResetToken)
//
// Generated by this command:
//
//	mockgen -destination=../mocks/repositories/mock_query_reset_token.go -package=repositories_mocks github.com/fromsi/jwt-oauth-sso/internal/repositories QueryResetToken
//

// Package repositories_mocks is a generated GoMock package.
package repositories_mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockQueryResetToken is a mock of QueryResetToken interface.
type MockQueryResetToken struct {
	ctrl     *gomock.Controller
	recorder *MockQueryResetTokenMockRecorder
	isgomock struct{}
}

// MockQueryResetTokenMockRecorder is the mock recorder for MockQueryResetToken.
type MockQueryResetTokenMockRecorder struct {
	mock *MockQueryResetToken
}

// NewMockQueryResetToken creates a new mock instance.
func NewMockQueryResetToken(ctrl *gomock.Controller) *MockQueryResetToken {
	mock := &MockQueryResetToken{ctrl: ctrl}
	mock.recorder = &MockQueryResetTokenMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockQueryResetToken) EXPECT() *MockQueryResetTokenMockRecorder {
	return m.recorder
}

// GetCreatedAt mocks base method.
func (m *MockQueryResetToken) GetCreatedAt() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCreatedAt")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetCreatedAt indicates an expected call of GetCreatedAt.
func (mr *MockQueryResetTokenMockRecorder) GetCreatedAt() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCreatedAt", reflect.TypeOf((*MockQueryResetToken)(nil).GetCreatedAt))
}

// GetExpiresAt mocks base method.
func (m *MockQueryResetToken) GetExpiresAt() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExpiresAt")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetExpiresAt indicates an expected call of GetExpiresAt.
func (mr *MockQueryResetTokenMockRecorder) GetExpiresAt() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExpiresAt", reflect.TypeOf((*MockQueryResetToken)(nil).GetExpiresAt))
}

// GetToken mocks base method.
func (m *MockQueryResetToken) GetToken() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetToken")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetToken indicates an expected call of GetToken.
func (mr *MockQueryResetTokenMockRecorder) GetToken() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetToken", reflect.TypeOf((*MockQueryResetToken)(nil).GetToken))
}

// GetUserUUID mocks base method.
func (m *MockQueryResetToken) GetUserUUID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserUUID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetUserUUID indicates an expected call of GetUserUUID.
func (mr *MockQueryResetTokenMockRecorder) GetUserUUID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserUUID", reflect.TypeOf((*MockQueryResetToken)(nil).GetUserUUID))
}
