// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fromsi/jwt-oauth-sso/internal/http/requests (interfaces: RegisterRequestBody)
//
// Generated by this command:
//
//	mockgen -destination=../../../mocks/http/requests/mock_register_request_body.go -package=requests_mocks github.com/fromsi/jwt-oauth-sso/internal/http/requests RegisterRequestBody
//

// Package requests_mocks is a generated GoMock package.
package requests_mocks

import (
	reflect "reflect"

	requests "github.com/fromsi/jwt-oauth-sso/internal/http/requests"
	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockRegisterRequestBody is a mock of RegisterRequestBody interface.
type MockRegisterRequestBody struct {
	ctrl     *gomock.Controller
	recorder *MockRegisterRequestBodyMockRecorder
	isgomock struct{}
}

// MockRegisterRequestBodyMockRecorder is the mock recorder for MockRegisterRequestBody.
type MockRegisterRequestBodyMockRecorder struct {
	mock *MockRegisterRequestBody
}

// NewMockRegisterRequestBody creates a new mock instance.
func NewMockRegisterRequestBody(ctrl *gomock.Controller) *MockRegisterRequestBody {
	mock := &MockRegisterRequestBody{ctrl: ctrl}
	mock.recorder = &MockRegisterRequestBodyMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRegisterRequestBody) EXPECT() *MockRegisterRequestBodyMockRecorder {
	return m.recorder
}

// GetEmail mocks base method.
func (m *MockRegisterRequestBody) GetEmail() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEmail")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetEmail indicates an expected call of GetEmail.
func (mr *MockRegisterRequestBodyMockRecorder) GetEmail() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEmail", reflect.TypeOf((*MockRegisterRequestBody)(nil).GetEmail))
}

// GetPassword mocks base method.
func (m *MockRegisterRequestBody) GetPassword() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPassword")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetPassword indicates an expected call of GetPassword.
func (mr *MockRegisterRequestBodyMockRecorder) GetPassword() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPassword", reflect.TypeOf((*MockRegisterRequestBody)(nil).GetPassword))
}

// Make mocks base method.
func (m *MockRegisterRequestBody) Make(arg0 *gin.Context) (requests.RegisterRequestBody, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Make", arg0)
	ret0, _ := ret[0].(requests.RegisterRequestBody)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Make indicates an expected call of Make.
func (mr *MockRegisterRequestBodyMockRecorder) Make(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Make", reflect.TypeOf((*MockRegisterRequestBody)(nil).Make), arg0)
}
