// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fromsi/jwt-oauth-sso/internal/http/requests (interfaces: LogoutDeviceRequest)
//
// Generated by this command:
//
//	mockgen -destination=../../../mocks/http/requests/mock_logout_device_request.go -package=requests_mocks github.com/fromsi/jwt-oauth-sso/internal/http/requests LogoutDeviceRequest
//

// Package requests_mocks is a generated GoMock package.
package requests_mocks

import (
	reflect "reflect"

	requests "github.com/fromsi/jwt-oauth-sso/internal/http/requests"
	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockLogoutDeviceRequest is a mock of LogoutDeviceRequest interface.
type MockLogoutDeviceRequest struct {
	ctrl     *gomock.Controller
	recorder *MockLogoutDeviceRequestMockRecorder
	isgomock struct{}
}

// MockLogoutDeviceRequestMockRecorder is the mock recorder for MockLogoutDeviceRequest.
type MockLogoutDeviceRequestMockRecorder struct {
	mock *MockLogoutDeviceRequest
}

// NewMockLogoutDeviceRequest creates a new mock instance.
func NewMockLogoutDeviceRequest(ctrl *gomock.Controller) *MockLogoutDeviceRequest {
	mock := &MockLogoutDeviceRequest{ctrl: ctrl}
	mock.recorder = &MockLogoutDeviceRequestMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLogoutDeviceRequest) EXPECT() *MockLogoutDeviceRequestMockRecorder {
	return m.recorder
}

// GetBody mocks base method.
func (m *MockLogoutDeviceRequest) GetBody() requests.LogoutDeviceRequestBody {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBody")
	ret0, _ := ret[0].(requests.LogoutDeviceRequestBody)
	return ret0
}

// GetBody indicates an expected call of GetBody.
func (mr *MockLogoutDeviceRequestMockRecorder) GetBody() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBody", reflect.TypeOf((*MockLogoutDeviceRequest)(nil).GetBody))
}

// Make mocks base method.
func (m *MockLogoutDeviceRequest) Make(arg0 *gin.Context) (requests.LogoutDeviceRequest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Make", arg0)
	ret0, _ := ret[0].(requests.LogoutDeviceRequest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Make indicates an expected call of Make.
func (mr *MockLogoutDeviceRequestMockRecorder) Make(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Make", reflect.TypeOf((*MockLogoutDeviceRequest)(nil).Make), arg0)
}
