// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fromsi/jwt-oauth-sso/internal/http/requests (interfaces: RegisterRequest)
//
// Generated by this command:
//
//	mockgen -destination=../../../mocks/http/requests/mock_register_request.go -package=requests_mocks github.com/fromsi/jwt-oauth-sso/internal/http/requests RegisterRequest
//

// Package requests_mocks is a generated GoMock package.
package requests_mocks

import (
	reflect "reflect"

	requests "github.com/fromsi/jwt-oauth-sso/internal/http/requests"
	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockRegisterRequest is a mock of RegisterRequest interface.
type MockRegisterRequest struct {
	ctrl     *gomock.Controller
	recorder *MockRegisterRequestMockRecorder
	isgomock struct{}
}

// MockRegisterRequestMockRecorder is the mock recorder for MockRegisterRequest.
type MockRegisterRequestMockRecorder struct {
	mock *MockRegisterRequest
}

// NewMockRegisterRequest creates a new mock instance.
func NewMockRegisterRequest(ctrl *gomock.Controller) *MockRegisterRequest {
	mock := &MockRegisterRequest{ctrl: ctrl}
	mock.recorder = &MockRegisterRequestMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRegisterRequest) EXPECT() *MockRegisterRequestMockRecorder {
	return m.recorder
}

// GetBody mocks base method.
func (m *MockRegisterRequest) GetBody() requests.RegisterRequestBody {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBody")
	ret0, _ := ret[0].(requests.RegisterRequestBody)
	return ret0
}

// GetBody indicates an expected call of GetBody.
func (mr *MockRegisterRequestMockRecorder) GetBody() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBody", reflect.TypeOf((*MockRegisterRequest)(nil).GetBody))
}

// GetIP mocks base method.
func (m *MockRegisterRequest) GetIP() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetIP")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetIP indicates an expected call of GetIP.
func (mr *MockRegisterRequestMockRecorder) GetIP() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIP", reflect.TypeOf((*MockRegisterRequest)(nil).GetIP))
}

// GetUserAgent mocks base method.
func (m *MockRegisterRequest) GetUserAgent() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserAgent")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetUserAgent indicates an expected call of GetUserAgent.
func (mr *MockRegisterRequestMockRecorder) GetUserAgent() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserAgent", reflect.TypeOf((*MockRegisterRequest)(nil).GetUserAgent))
}

// Make mocks base method.
func (m *MockRegisterRequest) Make(arg0 *gin.Context) (requests.RegisterRequest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Make", arg0)
	ret0, _ := ret[0].(requests.RegisterRequest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Make indicates an expected call of Make.
func (mr *MockRegisterRequestMockRecorder) Make(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Make", reflect.TypeOf((*MockRegisterRequest)(nil).Make), arg0)
}
