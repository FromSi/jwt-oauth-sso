// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fromsi/jwt-oauth-sso/internal/http/responses (interfaces: ErrorConflictResponse)
//
// Generated by this command:
//
//	mockgen -destination=../../../mocks/http/responses/mock_error_conflict_response.go -package=responses_mocks github.com/fromsi/jwt-oauth-sso/internal/http/responses ErrorConflictResponse
//

// Package responses_mocks is a generated GoMock package.
package responses_mocks

import (
	reflect "reflect"

	responses "github.com/fromsi/jwt-oauth-sso/internal/http/responses"
	gomock "go.uber.org/mock/gomock"
)

// MockErrorConflictResponse is a mock of ErrorConflictResponse interface.
type MockErrorConflictResponse struct {
	ctrl     *gomock.Controller
	recorder *MockErrorConflictResponseMockRecorder
	isgomock struct{}
}

// MockErrorConflictResponseMockRecorder is the mock recorder for MockErrorConflictResponse.
type MockErrorConflictResponseMockRecorder struct {
	mock *MockErrorConflictResponse
}

// NewMockErrorConflictResponse creates a new mock instance.
func NewMockErrorConflictResponse(ctrl *gomock.Controller) *MockErrorConflictResponse {
	mock := &MockErrorConflictResponse{ctrl: ctrl}
	mock.recorder = &MockErrorConflictResponseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockErrorConflictResponse) EXPECT() *MockErrorConflictResponseMockRecorder {
	return m.recorder
}

// Make mocks base method.
func (m *MockErrorConflictResponse) Make(arg0 error) responses.ErrorConflictResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Make", arg0)
	ret0, _ := ret[0].(responses.ErrorConflictResponse)
	return ret0
}

// Make indicates an expected call of Make.
func (mr *MockErrorConflictResponseMockRecorder) Make(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Make", reflect.TypeOf((*MockErrorConflictResponse)(nil).Make), arg0)
}
