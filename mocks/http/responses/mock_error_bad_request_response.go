// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fromsi/jwt-oauth-sso/internal/http/responses (interfaces: ErrorBadRequestResponse)
//
// Generated by this command:
//
//	mockgen -destination=../../../mocks/http/responses/mock_error_bad_request_response.go -package=responses_mocks github.com/fromsi/jwt-oauth-sso/internal/http/responses ErrorBadRequestResponse
//

// Package responses_mocks is a generated GoMock package.
package responses_mocks

import (
	reflect "reflect"

	responses "github.com/fromsi/jwt-oauth-sso/internal/http/responses"
	gomock "go.uber.org/mock/gomock"
)

// MockErrorBadRequestResponse is a mock of ErrorBadRequestResponse interface.
type MockErrorBadRequestResponse struct {
	ctrl     *gomock.Controller
	recorder *MockErrorBadRequestResponseMockRecorder
	isgomock struct{}
}

// MockErrorBadRequestResponseMockRecorder is the mock recorder for MockErrorBadRequestResponse.
type MockErrorBadRequestResponseMockRecorder struct {
	mock *MockErrorBadRequestResponse
}

// NewMockErrorBadRequestResponse creates a new mock instance.
func NewMockErrorBadRequestResponse(ctrl *gomock.Controller) *MockErrorBadRequestResponse {
	mock := &MockErrorBadRequestResponse{ctrl: ctrl}
	mock.recorder = &MockErrorBadRequestResponseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockErrorBadRequestResponse) EXPECT() *MockErrorBadRequestResponseMockRecorder {
	return m.recorder
}

// Make mocks base method.
func (m *MockErrorBadRequestResponse) Make(arg0 error) responses.ErrorBadRequestResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Make", arg0)
	ret0, _ := ret[0].(responses.ErrorBadRequestResponse)
	return ret0
}

// Make indicates an expected call of Make.
func (mr *MockErrorBadRequestResponseMockRecorder) Make(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Make", reflect.TypeOf((*MockErrorBadRequestResponse)(nil).Make), arg0)
}
