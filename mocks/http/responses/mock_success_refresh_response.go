// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fromsi/jwt-oauth-sso/internal/http/responses (interfaces: SuccessRefreshResponse)
//
// Generated by this command:
//
//	mockgen -destination=../../../mocks/http/responses/mock_success_refresh_response.go -package=responses_mocks github.com/fromsi/jwt-oauth-sso/internal/http/responses SuccessRefreshResponse
//

// Package responses_mocks is a generated GoMock package.
package responses_mocks

import (
	reflect "reflect"

	responses "github.com/fromsi/jwt-oauth-sso/internal/http/responses"
	repositories "github.com/fromsi/jwt-oauth-sso/internal/repositories"
	gomock "go.uber.org/mock/gomock"
)

// MockSuccessRefreshResponse is a mock of SuccessRefreshResponse interface.
type MockSuccessRefreshResponse struct {
	ctrl     *gomock.Controller
	recorder *MockSuccessRefreshResponseMockRecorder
	isgomock struct{}
}

// MockSuccessRefreshResponseMockRecorder is the mock recorder for MockSuccessRefreshResponse.
type MockSuccessRefreshResponseMockRecorder struct {
	mock *MockSuccessRefreshResponse
}

// NewMockSuccessRefreshResponse creates a new mock instance.
func NewMockSuccessRefreshResponse(ctrl *gomock.Controller) *MockSuccessRefreshResponse {
	mock := &MockSuccessRefreshResponse{ctrl: ctrl}
	mock.recorder = &MockSuccessRefreshResponseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSuccessRefreshResponse) EXPECT() *MockSuccessRefreshResponseMockRecorder {
	return m.recorder
}

// Make mocks base method.
func (m *MockSuccessRefreshResponse) Make(arg0 repositories.Device) (responses.SuccessRefreshResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Make", arg0)
	ret0, _ := ret[0].(responses.SuccessRefreshResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Make indicates an expected call of Make.
func (mr *MockSuccessRefreshResponseMockRecorder) Make(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Make", reflect.TypeOf((*MockSuccessRefreshResponse)(nil).Make), arg0)
}
