// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fromsi/jwt-oauth-sso/internal/http/routes (interfaces: Route)
//
// Generated by this command:
//
//	mockgen -destination=../../../mocks/http/routes/mock_route.go -package=routes_mocks github.com/fromsi/jwt-oauth-sso/internal/http/routes Route
//

// Package routes_mocks is a generated GoMock package.
package routes_mocks

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockRoute is a mock of Route interface.
type MockRoute struct {
	ctrl     *gomock.Controller
	recorder *MockRouteMockRecorder
	isgomock struct{}
}

// MockRouteMockRecorder is the mock recorder for MockRoute.
type MockRouteMockRecorder struct {
	mock *MockRoute
}

// NewMockRoute creates a new mock instance.
func NewMockRoute(ctrl *gomock.Controller) *MockRoute {
	mock := &MockRoute{ctrl: ctrl}
	mock.recorder = &MockRouteMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRoute) EXPECT() *MockRouteMockRecorder {
	return m.recorder
}

// Handle mocks base method.
func (m *MockRoute) Handle(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Handle", arg0)
}

// Handle indicates an expected call of Handle.
func (mr *MockRouteMockRecorder) Handle(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Handle", reflect.TypeOf((*MockRoute)(nil).Handle), arg0)
}

// Method mocks base method.
func (m *MockRoute) Method() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Method")
	ret0, _ := ret[0].(string)
	return ret0
}

// Method indicates an expected call of Method.
func (mr *MockRouteMockRecorder) Method() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Method", reflect.TypeOf((*MockRoute)(nil).Method))
}

// Pattern mocks base method.
func (m *MockRoute) Pattern() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Pattern")
	ret0, _ := ret[0].(string)
	return ret0
}

// Pattern indicates an expected call of Pattern.
func (mr *MockRouteMockRecorder) Pattern() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Pattern", reflect.TypeOf((*MockRoute)(nil).Pattern))
}
