// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fromsi/jwt-oauth-sso/internal/services (interfaces: MutableResetTokenService)
//
// Generated by this command:
//
//	mockgen -destination=../../mocks/services/mock_mutable_reset_token_service.go -package=services_mocks github.com/fromsi/jwt-oauth-sso/internal/services MutableResetTokenService
//

// Package services_mocks is a generated GoMock package.
package services_mocks

import (
	reflect "reflect"

	repositories "github.com/fromsi/jwt-oauth-sso/internal/repositories"
	gomock "go.uber.org/mock/gomock"
)

// MockMutableResetTokenService is a mock of MutableResetTokenService interface.
type MockMutableResetTokenService struct {
	ctrl     *gomock.Controller
	recorder *MockMutableResetTokenServiceMockRecorder
	isgomock struct{}
}

// MockMutableResetTokenServiceMockRecorder is the mock recorder for MockMutableResetTokenService.
type MockMutableResetTokenServiceMockRecorder struct {
	mock *MockMutableResetTokenService
}

// NewMockMutableResetTokenService creates a new mock instance.
func NewMockMutableResetTokenService(ctrl *gomock.Controller) *MockMutableResetTokenService {
	mock := &MockMutableResetTokenService{ctrl: ctrl}
	mock.recorder = &MockMutableResetTokenServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMutableResetTokenService) EXPECT() *MockMutableResetTokenServiceMockRecorder {
	return m.recorder
}

// SendNewResetTokenByUser mocks base method.
func (m *MockMutableResetTokenService) SendNewResetTokenByUser(arg0 repositories.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendNewResetTokenByUser", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendNewResetTokenByUser indicates an expected call of SendNewResetTokenByUser.
func (mr *MockMutableResetTokenServiceMockRecorder) SendNewResetTokenByUser(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendNewResetTokenByUser", reflect.TypeOf((*MockMutableResetTokenService)(nil).SendNewResetTokenByUser), arg0)
}
